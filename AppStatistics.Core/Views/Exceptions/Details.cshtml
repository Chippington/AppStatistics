@model AppStatistics.Core.Models.ExceptionViewModel
@{
    ViewData["Title"] = "Details";
}
<div>
    <input type="text" style="display:none" name="appid" value="@Model.source.guid" />
    <div>
        @*@Html.Partial("_ApplicationCard", new AppStatistics.Core.Models.ApplicationViewModel(Model.application, 5))*@ 
        <div class="tile">
            <a href="@Url.Action("Details", "Applications", new { appid = Model.source.applicationID })" class="tile-title" style="width:100%">
                @Html.Raw("<--") @Model.application.applicationName - @Model.application.guid
            </a>
        </div>
    </div>

    <div>
        @Html.Partial("_ExceptionCard", Model) 
    </div>

    <div>

    </div>

    <div class="tile">
        <div class="tile-title">
            Exception Metadata
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-hover tile">
                <tbody>
                    <tr><td width="200px"><b>Key</b></td><td><b>Value</b></td></tr>
                    @{ foreach (var key in Model.source.metadata.Keys) {
                            var value = Model.source.metadata[key];
                            <tr>
                                <td>@key</td>

                                @if (key.ToLower() == "session id" && string.IsNullOrEmpty(Model.sessionActionURI) == false) {
                                    <td><a href="@Model.sessionActionURI">@value</a></td>
                                } else {
                                    if(key.ToLower() == "request headers") {
                                        var tmp = value.Split("\r\n").OrderBy((t) => {
                                            if (t.Length <= 1)
                                                return 0;

                                            return t[0];
                                        });
                                        value = "";
                                        foreach (var str in tmp) {
                                            if(str.Trim() == "") {
                                                continue;
                                            }
                                            var pos = str.IndexOf(':');
                                            if(pos > 0) {
                                                string str1 = str.Substring(0, pos);
                                                string str2 = str.Substring(pos);
                                                value += $"<span><span style='color:deepskyblue'>{str1}</span>{str2}</span></br>";
                                            }
                                        }
                                    }

                                    <td>@Html.Raw(value.Replace(Environment.NewLine, "<br />").Replace("\r\n", "<br />"))</td>
                                }
                            </tr>
                        }}
                </tbody>
            </table>
        </div>
    </div>
    
    @{
        if (Model.source.innerExceptions.Count > 0) {
            var innerExceptions = Model.source.innerExceptions;
            var curIndex = 0;
            foreach (var exc in innerExceptions) {
                exc.guid = "Inner Exception " + (++curIndex).ToString();
                @Html.Partial("_ExceptionCard", new AppStatistics.Core.Models.ExceptionViewModel() { source = exc, application = Model.application })
            }
        }
    }
</div>